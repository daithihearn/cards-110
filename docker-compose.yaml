version: "3.5"

services:
  # Ngrok service to expose service via tunnels
  ngrok:
    image: ngrok/ngrok:2
    container_name: ngrok
    environment:
      - NGROK_CONFIG=/etc/ngrok.yml
    volumes:
      - ./ngrok/ngrok.yml:/etc/ngrok.yml
    networks:
      - cards
    depends_on:
      - api
      - websocket-service
      - frontend
    restart: unless-stopped

  api:
    image: localhost:5000/cards-110-api
    restart: always
    ports:
      - 8080:8080
    environment:
      - PORT=8080
      - LOGGING_LEVEL=DEBUG
      - MONGODB_URI=mongodb://mongo-node1:27017,mongo-node2:27018,mongo-node3:27019/cards-110
      - SPRING_PROFILES_ACTIVE=mongo-auth-password,prod
      - PLAYER_LOGIN_URL=http://localhost:3000/#/autologin
      - CORS_WHITELIST=http://localhost:3000
      - AUTH0_AUDIENCE=http://localhost:8080
      - AUTH0_CLIENT_ID=https://summer-brook-3375.eu.auth0.com/
      - MONGODB_CLIENT_CERT=
      - MONGODB_CLIENT_CERT_KEY=
      - MONGODB_CA_CERT=
      - MONGODB_CLIENT_COMMON_NAME=
      - REDIS_URL=redis://:password@redis:6379
      - REDIS_TOPIC=/game
      - CLOUDINARY_URL=YOUR CLOUDINARY URL GOES HERE
    networks:
      - cards
      - database
      - redis

  websocket-service:
    image: localhost:5000/websocket-service
    restart: always
    ports:
      - 7070:8080
    environment:
      - PORT=8080
      - LOGGING_LEVEL=DEBUG
      - SPRING_PROFILES_ACTIVE=dev
      - CORS_WHITELIST=http://localhost:3000
      - AUTH0_AUDIENCE=http://localhost:8080
      - AUTH0_CLIENT_ID=https://summer-brook-3375.eu.auth0.com/
      - REDIS_URL=redis://:password@redis:6379
      - REDIS_TOPIC=/game
    networks:
      - cards
      - database
      - redis

  frontend:
    image: localhost:5000/cards-110-frontend
    restart: always
    environment:
      - PORT=80
    ports:
      - 3000:80
    networks:
      - cards

networks:
  cards:
    driver: bridge
    name: cards
  database:
    name: database
  redis:
    name: redis
